
🔍 Az ÖSSZES főbb Tiszta Kód Elv, amit Flutterben is érdemes alkalmazni

✅ 1. Olvasható, beszédes kód
- Változó- és metódusnevek legyenek értelmesek és célorientáltak.
- Kerüld a kommentek helyetti "magyarázó" változóneveket.

✅ 2. Funkcionális elvek (Single Responsibility, Separation of Concerns)
- Egy widget csak egy dolgot csináljon.
- Különítsd el az adatlogikát a UI-tól: Widgets, Models, Services, Providers/Controllers.

✅ 3. Stateless vs Stateful widgetek jó használata
- StatelessWidget ha nincs állapot, StatefulWidget ha van – de minimalizáld az állapotot.

✅ 4. Rövid, újrahasználható komponensek
- Egy widget ne legyen túl hosszú, bontsd részekre, tartsd DRY: Don’t Repeat Yourself!

✅ 5. Egység és következetesség
- Egységes Padding, Margin, Style, Naming, Spacing.
- Ajánlott: theme.dart fájl.

✅ 6. Egységtesztelhetőség
- Az üzleti logika legyen tesztelhető, használd külön Service osztályban.
- Használj mock-okat teszteléshez.

✅ 7. Null safety és defensive coding
- Minden biztonságosan legyen kezelve (null-ellenőrzés, elkerülni a late és ! buktatókat).

✅ 8. Aszinkron kód megfelelő kezelése
- FutureBuilder, StreamBuilder, async/await, try/catch.
- Logold a hibákat is.

✅ 9. File és mappastruktúra
- Strukturált projektmapparendszer:
  lib/
    ├─ models/
    ├─ screens/
    ├─ widgets/
    ├─ services/
    ├─ logic/
    └─ utils/

✅ 10. Linting és automatizálás
- analysis_options.yaml
- dart format .
- CI pipeline beállítás (GitHub Actions, GitLab CI)

📌 Összegzés
Tiszta kód Flutterben = strukturált felépítés + olvasható kód + újrahasznosíthatóság + biztonságos programozás + tesztelhetőség.
